# This defines a Kubernetes DaemonSet resource. DaemonSets ensure that a pod runs on every node in the cluster.
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: collector

spec:
  selector:
    matchLabels:
      app: collector

  template:
    metadata:
      labels:
        app: collector

    spec:
      # This defines the service account that the collector pod will use (collector-sa)
      serviceAccountName: collector-sa

      containers:
      - name: collector
        image: otel/opentelemetry-collector-contrib:0.91.0
        args: ["--config=/etc/otelcol-contrib/otel-collector.yml"]
        # This defines volumes that will be mounted into the container.
        volumeMounts:
        - name: config-volume  
          mountPath: /etc/otelcol-contrib/otel-collector.yml  
          subPath: otel-collector.yml  
        - name: varlogpods  
          mountPath: /var/log/pods  # Path inside the container where the pod logs are mounted.
          readOnly: true  
        - name: varlibdockercontainers  
          mountPath: /var/lib/docker/containers  # Path inside the container where the container state directory is mounted.
          readOnly: true  
        
        env:
        - name: K8S_NODE_NAME  
          valueFrom:
            fieldRef:  # This defines how the value is retrieved.
              fieldPath: spec.nodeName  # This specifies the field within the pod spec that holds the node name.

  # This defines the volumes that will be mounted into the pods.
  volumes:
  - name: config-volume  # This volume references the otel-collector-config ConfigMap.
    configMap:
      # This specifies the name of the ConfigMap that contains the collector configuration (otel-collector-config).
      name: otel-collector-config
  - name: varlogpods  # This volume mounts the host's pod logs directory.
    hostPath:
      # This specifies the path on the host machine that will be mounted.
      path: /var/log/pods
  - name: varlibdockercontainers  # This volume mounts the host's Docker container state directory.
    hostPath:
      # This specifies the path on the host machine that will be mounted.
      path: /var/lib/docker/containers

  # This defines the restart policy for the pods. In this case, pods will be restarted on failure (Always).
  restartPolicy: Always

---

# This defines a Kubernetes Service resource. Services provide a way to expose pods to other pods or external systems.
apiVersion: v1
kind: Service
metadata:
  name: collector

spec:
  # This defines the pod selector that the Service will target. Pods with matching labels will be included in the service.
  selector:
    app: collector  

  ports:
  - protocol: TCP  # Defines the protocol (TCP in this case).
    port: 4317  # This defines the port on the Service where traffic will be directed.
    targetPort: 4317  # This defines the port on the pods that the Service will route traffic to.
    name: otlp-grpc  # This defines a name for the port (optional but helpful for clarity).
  - protocol: TCP  # Defines the protocol (TCP in this case).
    port: 8889  # This defines the port on the Service where traffic will be directed.
    targetPort: 8889  # This defines the port on the pods that the Service will route traffic to.
    name: prometheus  # This defines a name for the port (optional but helpful for clarity).

  # This defines the type of Service. In this case, ClusterIP creates a service that is only accessible from within the Kubernetes cluster.
  type: ClusterIP  
